.TH FDUPES 1
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.SH NAME
fdupes \- finds duplicate files in a given set of directories
.SH SYNOPSIS
.B fdupes
[
.I options
]
.I DIRECTORY
\|.\|.\|.

.SH "DESCRIPTION"
Searches the given path(s) for duplicate files. Such files are found by
comparing file sizes, then partial and full file hashes, followed by a
byte-by-byte comparison.

.SH OPTIONS
.TP
.B -r --recurse
for every directory given follow subdirectories encountered within
.TP
.B -R --recurse:
for each directory given after this option follow subdirectories
encountered within (note the ':' at the end of option; see the
Examples section below for further explanation)
.TP
.B -s --symlinks
follow symlinked directories
.TP
.B -H --hardlinks
normally, when two or more files point to the same disk area they are
treated as non-duplicates; this option will change this behavior
.TP
.B -n --noempty
exclude zero-length files from consideration
.TP
.B -x --xsize=SIZE
exclude files of size < SIZE from consideration; following suffixes can
be used:
.RS
.IP `k'
for kilobytes (units of 1024 bytes)
.IP `M'
for Megabytes (units of 1024 x 1024 bytes)
.IP `G'
for Gigabytes (units of 1024 x 1024 x 1024 bytes)
.RE
.TP
.B -f --omitfirst
omit the first file in each set of matches
.TP
.B -A --nohidden
exclude hidden files from consideration
.TP
.B -S --size
show size of duplicate files
.TP
.B -m --summarize
summarize duplicate files information
.TP
.B -q --quiet
hide progress indicator
.TP
.B -Q --quick
.B [WARNING: RISK OF DATA LOSS, SEE CAVEATS]
skip byte-for-byte verification of duplicate pairs (use hashes only)
.TP
.B -d --delete
prompt user for files to preserve, deleting all others (see
.B CAVEATS
below)
.TP
.B -L --hardlink
replace all duplicate files with hardlinks to the first file in each set
of duplicates
.TP
.B -N --noprompt
when used together with \-\-delete, preserve the first file in each set of
duplicates and delete the others without prompting the user
.TP
.B -p --permissions
don't consider files with different owner/group or permission bits as
duplicates
.TP
.B -o --order\fR=\fIWORD\fR
order files according to WORD:
time - sort by modification time
name - sort by filename
.TP
.B -O --paramorder
parameter order preservation is more important than the chosen sort; this
is particularly useful with the \fB\-N\fP option to ensure that automatic
deletion behaves in a controllable way
.TP
.B -v --version
display fdupes version
.TP
.B -h --help
displays help
.SH NOTES
Duplicate files are listed together in groups, each file displayed on a
separate line. The groups are then separated from each other by blank
lines.

.SH EXAMPLES
.TP
.B fdupes a --recurse: b
will follow subdirectories under b, but not those under a.
.TP
.B fdupes a --recurse b
will follow subdirectories under both a and b.
.TP
.B fdupes -O dir1 dir3 dir2
will always place 'dir1' results first in any match set (where relevant)

.SH CAVEATS
When using
.B \-d
or
.BR \-\-delete ,
care should be taken to insure against accidental data loss.

The
.B \-O
or
.BR \-\-paramorder
option allows the user greater control over what appears in the first
position of a match set, specifically for keeping the \fB\-N\fP option
from deleting all but one file in a set in a seemingly random way. All
directories specified on the command line will be used as the sorting
order of result sets first, followed by the sorting algorithm set by
the \fB\-o\fP or \fB\-\-order\fP option. This means that the order of
all match pairs for a single directory specification will retain the
old sorting behavior even if this option is specified.

When used together with options
.B \-s
or
.BR \-\-symlink ,
a user could accidentally preserve a symlink while deleting the file it
points to.

Furthermore, when specifying a particular directory more than once, all
files within that directory will be listed as their own duplicates,
leading to data loss should a user preserve a file without its "duplicate"
(the file itself!).

The
.B \-Q
or
.BR \-\-quick
option only reads each file once, hashes it, and performs comparisons
based solely on the hashes. There is a small but significant risk of a
hash collision which is the purpose of the failsafe byte-for-byte
comparison that this option explicitly bypasses. Do not use it on ANY data
set for which any amount of data loss is unacceptable. This option is not
included in the help text for the program due to its risky nature.
.B You have been warned!

.SH AUTHOR
Adrian Lopez <adrian2@caribe.net>

This version, 'fdupes-jody', was forked, is maintained by, and contains
extra code copyrighted by Jody Bruchon <jody@jodybruchon.com>
